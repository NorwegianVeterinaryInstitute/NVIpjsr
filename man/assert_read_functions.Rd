% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/assert_arguments.R
\name{assert_read_functions}
\alias{assert_read_functions}
\title{Collection of assertions for read_functions}
\usage{
assert_read_functions(filename, from_path, add)
}
\arguments{
\item{filename}{Argument to the function to be asserted.}

\item{from_path}{Argument to the function to be asserted. Ending
"\\" and "/" must have been removed before the assertion is performed.}

\item{add}{assertCollection.}
}
\value{
An assertCollection that have been updated with the results of assertions for \code{filename} and \code{from_path}.
}
\description{
Collection of assertions used in standard read_functions.
}
\details{
All read functions include the same arguments and the
    assertion can be standardized. The assertion of \code{filname} is
    constructed to handle both character and list input.

    The assertion is based on removing ending "\\" and "/" from
    \code{from_path} before the assertion is performed.
The assertCollection must be set up separately and is used as input argument, see example.
}
\examples{
# Attach package and make temporary directory
library(NVIdb)
td <- tempdir()
write.csv2(NVIdb::PJS_levels, file = file.path(td, "PJS_levels.csv"))

# ARGUMENT CHECKING
# Object to store check-results
checks <- checkmate::makeAssertCollection()
# Perform checks
checks <- assert_read_functions(filename = "PJS_levels.csv",
                                from_path = td,
                                add = checks)
# Report check-results
checkmate::reportAssertions(checks)
}
\author{
Petter Hopp Petter.Hopp@vetinst.no
}
\keyword{internal}
