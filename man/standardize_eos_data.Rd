% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/standardize_eos_data.R
\name{standardize_eos_data}
\alias{standardize_eos_data}
\title{Standardising EOS-data}
\usage{
standardize_eos_data(
  data,
  dbsource = deparse(substitute(data)),
  standards = NULL,
  standardize_colnames = TRUE,
  breed_to_species = TRUE,
  adjust_n_examined = TRUE,
  delete_redundant = TRUE,
  ...
)
}
\arguments{
\item{data}{[\code{data.frame}]\cr
The data retrieved from EOS.}

\item{dbsource}{[\code{character(1)}]\cr
 If specified, this will be used for fetching standard column names by
\code{\link{standardize_columns}}. Defaults to the name of the input data.}

\item{standards}{[\code{data.frame}]\cr
The translation table to standard column names. Defaults to \code{NULL}.}

\item{standardize_colnames}{[\code{logical(1)}]\cr
If \code{TRUE}, the column names will be standardised. Defaults to \code{TRUE}.}

\item{breed_to_species}{[\code{logical(1)}]\cr
If \code{TRUE}, breed is translated back to species. Defaults to \code{TRUE}.}

\item{adjust_n_examined}{[\code{logical(1)}]\cr
If \code{TRUE}, the number of examined samples is adjusted so it is at maximum
the number of received samples. Defaults to \code{TRUE}.}

\item{delete_redundant}{[\code{logical(1)}]\cr
If \code{TRUE}, redundant variables in the data is deleted. Defaults to \code{TRUE}.}

\item{\dots}{Other arguments to be passed to \code{\link{standardize_columns}}.}
}
\value{
\code{data.frame} with standardized EOS-data.
}
\description{
Standardising EOS-data. This standardising should always be performed.
    Otherwise summary numbers can be wrong.
}
\details{
The function performs the following standardising of data extracted from EOS:
\itemize{
  \item The column names are standardised using \code{\link{standardize_columns}}.
  \item Numeric variables are transformed to numbers.
  \item Datetime variables are transformed to dates.
  \item Double registrations of a "Sak" due to the municipality being divided
        between two Food Safety Authority office, are merged into one and for
        these, the information on Food Safety Authority office is removed.
  \item Splits saksnr into saksnr and fagnr if saksnr combines both.
  \item Breed is transformed to species.
  \item Number of examined samples are corrected so it don't exceed the number
        of received samples.
  \item Redundant variables are deleted.
  }
Standardisation of column names may be set to \code{FALSE}. This should only be
    done if the column names have been standardised previously as a new
    standardisation of column names may give unpredicted results. Remark that all
    other standardisations are dependent on standard column names, so the function
    will not work if the data do not have standard column names.

Transformation from breed to species is only performed when species is included
    in the data. You need to import the translation table for PJS-codes to perform
    the translation, use \code{PJS_codes_2_text <- read_PJS_codes_2_text()}.

Correction of number of tested samples is only done when both number of received
    and number of tested are included in the data.

There are a few reduntant varibles in some data sets. In CWD data both "sist_overfort"
    and "sist_endret" keeps the same information. "sist_endret" is deleted. In
    Salmonella and Campylobacter data, "prove_identitet" is always \code{NULL} and
    "prove_id" is \code{NULL} for salmonella data and equal ti "id_nr" for Campylobacter
    data. Both are deleted. Set \code{delete_redundant = FALSE} to keep them.
}
\examples{
\dontrun{
# Standardizing proveresultat_bse
PJS_codes_2_text <- read_PJS_codes_2_text()
proveresultat_bse <- standardize_eos_data(data = proveresultat_bse)
}

}
\author{
Petter Hopp Petter.Hopp@vetinst.no
}
