% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/retrieve_PJSdata.R
\name{retrieve_PJSdata}
\alias{retrieve_PJSdata}
\title{Retrieves data from PJS}
\usage{
retrieve_PJSdata(
  year = NULL,
  selection_parameters = NULL,
  FUN = NULL,
  select_statement = NULL,
  ...
)
}
\arguments{
\item{year}{[\code{numeric}]\cr
One year or a vector giving the first and last years that should be selected.
    Defaults to \code{NULL}.}

\item{selection_parameters}{[\code{character(1)}]\cr
Either the path and file name for an R script that can be sourced and that
    sets the selection parameters or a named list with the selection parameters
    (i.e. of the same format as the output of
    \ifelse{html}{\code{\link{set_disease_parameters}}}{\code{set_disease_parameters}}).
    Defaults to \code{NULL}.}

\item{FUN}{\code{deprecated}\cr
\code{FUN} should instead be included as input to \code{selection_parameters}.
    Defaults to \code{NULL}.}

\item{select_statement}{\code{deprecated}\cr
\code{select_statement} should instead be included as input to
    \code{selection_parameters}. Defaults to \code{NULL}.}

\item{\dots}{Other arguments to be passed to the underlying functions:
\ifelse{html}{\code{\link{login_PJS}}}{\code{login_PJS}}
and
\ifelse{html}{\code{\link{exclude_from_PJSdata}}}{\code{exclude_from_PJSdata}}.}
}
\value{
A named list with PJS data.
}
\description{
Retrieves and standardises PJS data. \code{retrieve_PJSdata} is
    a wrapper for several \code{NVIdb}-functions and the intention of
    \code{retrieve_PJSdata} is to shorten code and to ensure that a standard
    procedure is followed when retrieving PJS data, see details. It can only
    be used for retrieving case data from PJS where the columns "aar",
    "ansvarlig_seksjon" and "innsendelsenr" are included in the columns. It
    cannot be used for retrieving data from other tables available in
    "journal_rapp".
}
\details{
\code{retrieve_PJSdata} is a wrapper for the following \code{NVIdb}-functions:
\itemize{
  \item Constructs the select statement by a build_query-function (see details)
    and selection parameters.
  \item Creates an open ODBC-channel using
    \ifelse{html}{\code{\link{login_PJS}}}{\code{login_PJS}}.
  \item Retrieves the data using the select statement constructed above.
  \item Standardises the data using
    \ifelse{html}{\code{\link{standardize_PJSdata}}}{\code{standardize_PJSdata}}.
  \item Excludes unwanted cases using
    \ifelse{html}{\code{\link{exclude_from_PJSdata}}}{\code{exclude_from_PJSdata}}.
  }

For the function to run automatically without having to enter PJS user
    credentials, it is dependent that PJS user credentials have been saved using
    \ifelse{html}{\code{\link{set_credentials_PJS}}}{\code{set_credentials_PJS}}.
    Otherwise, the credentials must be input manually to establish an open
    ODBC channel.

The select statement for PJS can be built giving the selection parameters and
    input to one of the build_query-functions, i.e.
    \ifelse{html}{\code{\link{build_query_hensikt}}}{\code{build_query_hensikt}},
    \ifelse{html}{\code{\link{build_query_one_disease}}}{\code{build_query_one_disease}}
    and
    \ifelse{html}{\code{\link{build_query_outbreak}}}{\code{build_query_outbreak}}.
    The selection parameters can be set by using
    \ifelse{html}{\code{\link{set_disease_parameters}}}{\code{set_disease_parameters}}.
    or by giving a list of similar format for input to
    \code{selection_parameters}, see the build_query-functions for necessary
    input.

\code{retrieve_PJSdata} gives the possibility of giving the select_statement
    as a string instead of using the build_query-functions. If so, the
    select_statement should be included in the selection parameters. This
    should only by done for select statements that previously have been tested
    and are known to have correct syntax. \code{retrieve_PJSdata} has no
    possibility of checking the sql syntax before it is submitted to PJS and
    untested select statements can take a lot of time or stop the function
    without proper error messages. In the case that both a select_statement
    and a function with the necessary selection_parameters are given,
    the select_statement constructed by the function will be used.

The output is a named list where each entry is a data frame with PJS data. If
    the select statement is named, the returned data frame will have that name.
    If the select statement is unnamed, it will try to identify the first
    table in the select statement and use this as name. If not possible, the
    name will be of the format "PJSdata#" where # is the number of the select
    statement.
}
\examples{

#
}
\author{
Petter Hopp Petter.Hopp@vetinst.no
}
